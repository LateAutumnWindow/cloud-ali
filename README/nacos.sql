/*
 Navicat Premium Data Transfer

 Source Server         : my
 Source Server Type    : MySQL
 Source Server Version : 50732
 Source Host           : 192.168.40.199:3316
 Source Schema         : nacos

 Target Server Type    : MySQL
 Target Server Version : 50732
 File Encoding         : 65001

 Date: 04/06/2021 18:12:50
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 116 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (1, 'transport.type', 'SEATA_GROUP', 'TCP', 'b136ef5f6a01d816991fe3cf7a6ac763', '2020-12-31 23:19:53', '2020-12-31 23:19:53', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (2, 'transport.server', 'SEATA_GROUP', 'NIO', 'b6d9dfc0fb54277321cebc0fff55df2f', '2020-12-31 23:19:53', '2020-12-31 23:19:53', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (3, 'transport.heartbeat', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2020-12-31 23:19:53', '2020-12-31 23:19:53', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (4, 'transport.enableClientBatchSendRequest', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-12-31 23:19:53', '2020-12-31 23:19:53', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (5, 'transport.threadFactory.bossThreadPrefix', 'SEATA_GROUP', 'NettyBoss', '0f8db59a3b7f2823f38a70c308361836', '2020-12-31 23:19:53', '2020-12-31 23:19:53', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (6, 'transport.threadFactory.workerThreadPrefix', 'SEATA_GROUP', 'NettyServerNIOWorker', 'a78ec7ef5d1631754c4e72ae8a3e9205', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (7, 'transport.threadFactory.serverExecutorThreadPrefix', 'SEATA_GROUP', 'NettyServerBizHandler', '11a36309f3d9df84fa8b59cf071fa2da', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (8, 'transport.threadFactory.shareBossWorker', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (9, 'transport.threadFactory.clientSelectorThreadPrefix', 'SEATA_GROUP', 'NettyClientSelector', 'cd7ec5a06541e75f5a7913752322c3af', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (10, 'transport.threadFactory.clientSelectorThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (11, 'transport.threadFactory.clientWorkerThreadPrefix', 'SEATA_GROUP', 'NettyClientWorkerThread', '61cf4e69a56354cf72f46dc86414a57e', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (12, 'transport.threadFactory.bossThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (13, 'transport.threadFactory.workerThreadSize', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (14, 'transport.shutdown.wait', 'SEATA_GROUP', '3', 'eccbc87e4b5ce2fe28308fd9f2a7baf3', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (15, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (16, 'service.default.grouplist', 'SEATA_GROUP', '127.0.0.1:8091', 'c32ce0d3e264525dcdada751f98143a3', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (17, 'service.enableDegrade', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (18, 'service.disableGlobalTransaction', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (19, 'client.rm.asyncCommitBufferLimit', 'SEATA_GROUP', '10000', 'b7a782741f667201b54880c925faec4b', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (20, 'client.rm.lockRetryInternal', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2020-12-31 23:19:54', '2020-12-31 23:19:54', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (21, 'client.rm.lockRetryTimes', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (22, 'client.rm.reportRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (23, 'client.rm.lockRetryPolicyBranchRollbackOnConflict', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (24, 'client.rm.tableMetaCheckEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (25, 'client.rm.sqlParserType', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (26, 'client.rm.reportSuccessEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (27, 'client.tm.commitRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (28, 'client.tm.rollbackRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (29, 'store.mode', 'SEATA_GROUP', 'db', 'd77d5e503ad1439f585ac494268b351b', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (30, 'store.file.dir', 'SEATA_GROUP', 'file_store/data', '6a8dec07c44c33a8a9247cba5710bbb2', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (31, 'store.file.maxBranchSessionSize', 'SEATA_GROUP', '16384', 'c76fe1d8e08462434d800487585be217', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (32, 'store.file.maxGlobalSessionSize', 'SEATA_GROUP', '512', '10a7cdd970fe135cf4f7bb55c0e3b59f', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (33, 'store.file.fileWriteBufferCacheSize', 'SEATA_GROUP', '16384', 'c76fe1d8e08462434d800487585be217', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (34, 'store.file.flushDiskMode', 'SEATA_GROUP', 'async', '0df93e34273b367bb63bad28c94c78d5', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (35, 'store.file.sessionReloadReadSize', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (36, 'store.db.datasource', 'SEATA_GROUP', 'dbcp', '3a9f384fb40c59fbdc67024ee97d94b1', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (37, 'store.db.dbType', 'SEATA_GROUP', 'mysql', '81c3b080dad537de7e10e0987a4bf52e', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (38, 'store.db.driverClassName', 'SEATA_GROUP', 'com.mysql.jdbc.Driver', '683cf0c3a5a56cec94dfac94ca16d760', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (39, 'store.db.url', 'SEATA_GROUP', 'jdbc:mysql://192.168.40.199:3316/seata?useUnicode=true', '409d3faba09427502eb129f492edc84b', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (40, 'store.db.user', 'SEATA_GROUP', 'root', '63a9f0ea7bb98050796b649e85481845', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (41, 'store.db.password', 'SEATA_GROUP', '123456', 'e10adc3949ba59abbe56e057f20f883e', '2020-12-31 23:19:55', '2020-12-31 23:19:55', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (42, 'store.db.minConn', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (43, 'store.db.maxConn', 'SEATA_GROUP', '3', 'eccbc87e4b5ce2fe28308fd9f2a7baf3', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (44, 'store.db.globalTable', 'SEATA_GROUP', 'global_table', '8b28fb6bb4c4f984df2709381f8eba2b', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (45, 'store.db.branchTable', 'SEATA_GROUP', 'branch_table', '54bcdac38cf62e103fe115bcf46a660c', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (46, 'store.db.queryLimit', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (47, 'store.db.lockTable', 'SEATA_GROUP', 'lock_table', '55e0cae3b6dc6696b768db90098b8f2f', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (48, 'server.recovery.committingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (49, 'server.recovery.asynCommittingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (50, 'server.recovery.rollbackingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (51, 'server.recovery.timeoutRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (52, 'server.maxCommitRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (53, 'server.maxRollbackRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (54, 'server.rollbackRetryTimeoutUnlockEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (55, 'client.undo.dataValidation', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (56, 'client.undo.logSerialization', 'SEATA_GROUP', 'jackson', 'b41779690b83f182acc67d6388c7bac9', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (57, 'server.undo.logSaveDays', 'SEATA_GROUP', '7', '8f14e45fceea167a5a36dedd4bea2543', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (58, 'server.undo.logDeletePeriod', 'SEATA_GROUP', '86400000', 'f4c122804fe9076cb2710f55c3c6e346', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (59, 'client.undo.logTable', 'SEATA_GROUP', 'undo_log', '2842d229c24afe9e61437135e8306614', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (60, 'client.log.exceptionRate', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (61, 'transport.serialization', 'SEATA_GROUP', 'seata', 'b943081c423b9a5416a706524ee05d40', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (62, 'transport.compressor', 'SEATA_GROUP', 'none', '334c4a4c42fdb79d7ebc3e73b517e6f8', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (63, 'metrics.enabled', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (64, 'metrics.registryType', 'SEATA_GROUP', 'compact', '7cf74ca49c304df8150205fc915cd465', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (65, 'metrics.exporterList', 'SEATA_GROUP', 'prometheus', 'e4f00638b8a10e6994e67af2f832d51c', '2020-12-31 23:19:56', '2020-12-31 23:19:56', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (66, 'metrics.exporterPrometheusPort', 'SEATA_GROUP', '9898', '7b9dc501afe4ee11c56a4831e20cee71', '2020-12-31 23:19:57', '2020-12-31 23:19:57', NULL, '192.168.40.199', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (74, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '# spring:\n#   shardingsphere:\n#     props:\n#       sql.show: true\n#     datasource:\n#       names: ds0,ds1\n#       ds0:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#       ds1:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#     sharding:\n#       default-database-strategy:\n#         inline:\n#           sharding-column: user_id\n#           algorithm-expression: ds$->{user_id % 2}\n#       # 绑定逻辑表\n#       binding-tables: t_order\n#       # 广播表\n#       broadcast-tables: t_dict,storage_0,account_0\n#       tables:\n#         t_order:\n#           actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n#           table-strategy:\n#             inline:\n#               sharding-column: order_id\n#               algorithm-expression: t_order_$->{order_id % 2}\n#           key-generator:\n#             column: order_id\n#             type: SNOWFLAKE\nspring:\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n    driver-class-name: com.mysql.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \n# mybatis:\n#   mapperLocations: classpath:mapper/*.xml\n#   typeAliasesPackage: com.yan.cloud.dao\n#   configuration:\n#     map-underscore-to-camel-case: true\n# MyBatis-Plus 配置 -------------------------------------------------------------     \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    #设置全局属性用于控制数据库的类型\n    dbType: mysql \n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '3e62112a9568892a1717cc80f848fbba', '2021-01-01 08:26:35', '2021-04-20 00:10:12', NULL, '192.168.40.1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (75, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '# spring:\n#   shardingsphere:\n#     props:\n#       sql.show: true\n#     datasource:\n#       names: ds0,ds1\n#       ds0:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#       ds1:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#     sharding:\n#       default-database-strategy:\n#         inline:\n#           sharding-column: user_id\n#           algorithm-expression: ds$->{user_id % 2}\n#       # 绑定逻辑表\n#       binding-tables: t_order\n#       # 广播表\n#       broadcast-tables: t_dict,storage_0,account_0\n#       tables:\n#         t_order:\n#           actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n#           table-strategy:\n#             inline:\n#               sharding-column: order_id\n#               algorithm-expression: t_order_$->{order_id % 2}\n#           key-generator:\n#             column: order_id\n#             type: SNOWFLAKE\nspring:\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n    driver-class-name: com.mysql.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson ----------------------------------------------------\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# Mybatis ----------------------------------------------------\n# mybatis:\n#   mapperLocations: classpath:mapper/*.xml\n#   typeAliasesPackage: com.yan.cloud.dao\n#   configuration:\n#     map-underscore-to-camel-case: true\n\n# Mybatis-Plus ----------------------------------------------------\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    #设置全局属性用于控制数据库的类型\n    dbType: mysql\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '5492f033b4ec68c9ee63598f6015bd5e', '2021-01-01 10:01:06', '2021-04-20 00:13:46', NULL, '192.168.40.1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (78, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '# spring:\n#   shardingsphere:\n#     props:\n#       sql.show: true\n#     datasource:\n#       names: ds0,ds1\n#       ds0:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#       ds1:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#     sharding:\n#       default-database-strategy:\n#         inline:\n#           sharding-column: user_id\n#           algorithm-expression: ds$->{user_id % 2}\n#       # 绑定逻辑表\n#       binding-tables: t_order\n#       # 广播表\n#       broadcast-tables: t_dict,storage_0,account_0\n#       tables:\n#         t_order:\n#           actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n#           table-strategy:\n#             inline:\n#               sharding-column: order_id\n#               algorithm-expression: t_order_$->{order_id % 2}\n#           key-generator:\n#             column: order_id\n#             type: SNOWFLAKE\n\nspring:\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n    driver-class-name: com.mysql.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n# Mybatis -------------------------------------------------\n# mybatis:\n#   mapperLocations: classpath:mapper/*.xml\n#   typeAliasesPackage: com.yan.cloud.dao\n#   configuration:\n#     map-underscore-to-camel-case: true\n\n# Redison -------------------------------------------------    \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password:\n\n# Mybatis-Plus -------------------------------------------------    \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata -------------------------------------------------   \nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '0efc2422833cb4e3121973edd04fdb3b', '2021-01-01 11:13:00', '2021-04-20 00:16:42', NULL, '192.168.40.1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (96, 'service.vgroupMapping.my_order_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-18 00:21:16', '2021-04-18 00:21:16', NULL, '192.168.40.1', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (97, 'service.vgroupMapping.my_storage_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-18 00:25:01', '2021-04-18 00:25:01', NULL, '192.168.40.1', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (98, 'service.vgroupMapping.my_account_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-18 00:25:34', '2021-04-18 00:25:34', NULL, '192.168.40.1', '', '', NULL, NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (104, 'service.vgroupMapping.my_biz_test_tx_group', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-18 22:06:22', '2021-04-18 22:06:22', NULL, '192.168.40.1', '', '', NULL, NULL, NULL, 'text', NULL);

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(64) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 171 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (74, 90, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.alibaba.druid.pool.DruidDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.alibaba.druid.pool.DruidDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '63773573644e53a571cbcada854190f5', '2021-04-15 06:12:01', '2021-04-15 06:12:02', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 91, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.alibaba.druid.pool.DruidDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.alibaba.druid.pool.DruidDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'ea604dd74df850ed94b72e2179647a46', '2021-04-15 06:12:41', '2021-04-15 06:12:42', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 92, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.alibaba.druid.pool.DruidDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.alibaba.druid.pool.DruidDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'ac270653e576b063551e75d1fe3225fd', '2021-04-15 06:13:20', '2021-04-15 06:13:21', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 93, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'ac6011ae6118b1c355b581e7616c8429', '2021-04-15 06:13:29', '2021-04-15 06:13:29', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 94, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'a59967dd70b7250168b830f1ba147ae0', '2021-04-15 06:16:09', '2021-04-15 06:16:09', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 95, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '9a75fbbda5faeb1481122b16f7849e18', '2021-04-15 06:16:54', '2021-04-15 06:16:55', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 96, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'ac6011ae6118b1c355b581e7616c8429', '2021-04-15 06:17:13', '2021-04-15 06:17:14', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 97, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'cab7a77231b2c5182438201aba96f5bb', '2021-04-15 09:25:41', '2021-04-15 09:25:41', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 98, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '6957ca17cfb3a650f9e8fa2ae70fa2e1', '2021-04-15 09:26:02', '2021-04-15 09:26:03', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 99, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '3b082d80f477a8b74623a40b9d1f1278', '2021-04-15 09:26:32', '2021-04-15 09:26:33', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 100, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'beae8a6bef8e2562557fdbe921d4a0e3', '2021-04-17 15:32:57', '2021-04-17 23:32:57', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 101, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '9e58a3f878e9bfaee8b8700a8dfdd818', '2021-04-17 15:33:18', '2021-04-17 23:33:18', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 102, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'fa7a36f1decc01220fd8dde8b014cf68', '2021-04-17 15:33:39', '2021-04-17 23:33:40', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 103, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nlogging:\n	level:\n		com.alibaba.nacos.client.config.impl: WARN\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'dc6482a5a2f53b7600bb409991a25d1a', '2021-04-17 15:38:04', '2021-04-17 23:38:05', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 104, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level: com.alibaba.nacos.client.config.impl: WARN\n    io:\n      seata: INFO\n		\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'ba3b273c085fb31dd2bca34fb5d8cf70', '2021-04-17 15:39:01', '2021-04-17 23:39:02', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 105, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level: com.alibaba.nacos.client.config.impl：WARN\n    io:\n      seata: INFO\n		\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'aeda2856b0fbc086a9bd2e2557cbba06', '2021-04-17 15:41:35', '2021-04-17 23:41:36', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 106, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level: com.alibaba.nacos.client.config.impl：WARN\n		\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '14ccf772bdba996b3c6f941fec9e835a', '2021-04-17 15:43:18', '2021-04-17 23:43:19', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 107, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n		\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '5edcb60ee4ffc9e67b903629eee883a1', '2021-04-17 15:44:15', '2021-04-17 23:44:16', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 108, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nlogging:\n	level:\n		com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'e3025d9de1d62b77406121153a662469', '2021-04-17 15:45:47', '2021-04-17 23:45:47', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 109, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\nlogging:\n	level:\n		com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'c282603742c0800e464bc5b4d72bbb07', '2021-04-17 15:46:03', '2021-04-17 23:46:04', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 110, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'bd297907863b1dcae52bd7e850d366f2', '2021-04-17 16:05:07', '2021-04-18 00:05:07', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 111, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'c3ca52eeb510b910232e53c5b74560ef', '2021-04-17 16:05:24', '2021-04-18 00:05:25', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 112, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '0e2ed949c3b10807af340bb9dc122844', '2021-04-17 16:05:57', '2021-04-18 00:05:57', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 113, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '5f9fc8c57a98bbdee0c07a2fd4b8f0ce', '2021-04-17 16:10:04', '2021-04-18 00:10:04', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 114, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '38847a29d0789fe2aaadfee57735e6ec', '2021-04-17 16:10:55', '2021-04-18 00:10:56', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 115, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'f22ccf1b6fcb3570bd341812782583e3', '2021-04-17 16:11:29', '2021-04-18 00:11:30', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 116, 'service.vgroupMapping.my_order_test_tx_group', 'DEFAULT_GROUP', '', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-17 16:18:01', '2021-04-18 00:18:01', NULL, '192.168.40.1', 'I', '');
INSERT INTO `his_config_info` VALUES (95, 117, 'service.vgroupMapping.my_order_test_tx_group', 'DEFAULT_GROUP', '', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-17 16:20:44', '2021-04-18 00:20:44', NULL, '192.168.40.1', 'D', '');
INSERT INTO `his_config_info` VALUES (0, 118, 'service.vgroupMapping.my_order_test_tx_group', 'SEATA_GROUP', '', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-17 16:21:15', '2021-04-18 00:21:16', NULL, '192.168.40.1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 119, 'service.vgroupMapping.my_storage_test_tx_group', 'SEATA_GROUP', '', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-17 16:25:01', '2021-04-18 00:25:01', NULL, '192.168.40.1', 'I', '');
INSERT INTO `his_config_info` VALUES (0, 120, 'service.vgroupMapping.my_account_test_tx_group', 'SEATA_GROUP', '', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-17 16:25:34', '2021-04-18 00:25:34', NULL, '192.168.40.1', 'I', '');
INSERT INTO `his_config_info` VALUES (74, 121, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  application-id: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '2d6939705d3e7eb1298e3e301e78f78c', '2021-04-17 20:39:47', '2021-04-18 04:39:47', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 122, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'feign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN', '3c9013fd8f056ab9555f1caa470b5072', '2021-04-18 12:57:32', '2021-04-18 20:57:32', NULL, '192.168.40.1', 'I', '');
INSERT INTO `his_config_info` VALUES (100, 123, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'feign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN', '3c9013fd8f056ab9555f1caa470b5072', '2021-04-18 13:57:09', '2021-04-18 21:57:09', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 124, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  shardingsphere:\r\n    props:\r\n      sql.show: true\r\n    datasource:\r\n      names: ds0,ds1\r\n      ds0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n      ds1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n    sharding:\r\n      default-database-strategy:\r\n        inline:\r\n          sharding-column: user_id\r\n          algorithm-expression: ds$->{user_id % 2}\r\n      binding-tables: t_order,t_order_item\r\n      broadcast-tables: t_dict,storage_0\r\n      tables:\r\n        t_order:\r\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_id\r\n            type: SNOWFLAKE\r\n        t_order_item:\r\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_item_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_item_id\r\n            type: SNOWFLAKE\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN', 'daf3f14007cf9cd3bd9257d8856448b9', '2021-04-18 14:00:34', '2021-04-18 22:00:34', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 125, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  shardingsphere:\r\n    props:\r\n      sql.show: true\r\n    datasource:\r\n      names: ds0,ds1\r\n      ds0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n      ds1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n    sharding:\r\n      default-database-strategy:\r\n        inline:\r\n          sharding-column: user_id\r\n          algorithm-expression: ds$->{user_id % 2}\r\n      binding-tables: t_order,t_order_item\r\n      broadcast-tables: t_dict,storage_0\r\n      tables:\r\n        t_order:\r\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_id\r\n            type: SNOWFLAKE\r\n        t_order_item:\r\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_item_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_item_id\r\n            type: SNOWFLAKE\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN\r\n# Seata 配置 -------------------------------------------------------------  \r\nseata:\r\n  enabled: true\r\n  applicationId: raw-biz\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n  enableAutoDataSourceProxy: true\r\n  txServiceGroup: my_biz_test_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n      application: seata-server', '3427c8c4a8f4ab43f0c1505e90e54e6c', '2021-04-18 14:02:32', '2021-04-18 22:02:32', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (0, 126, 'service.vgroupMapping.my_biz_test_tx_group', 'SEATA_GROUP', '', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-04-18 14:06:21', '2021-04-18 22:06:22', NULL, '192.168.40.1', 'I', '');
INSERT INTO `his_config_info` VALUES (74, 127, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '0411766504d1e0e1d470180dac75d38a', '2021-04-18 19:22:21', '2021-04-19 03:22:21', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 128, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '5ab393ee4859299c8ebde06fb7bd9f8a', '2021-04-18 19:23:05', '2021-04-19 03:23:06', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 129, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      binding-tables: t_order,t_order_item\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\n            props:\n              worker:\n                id: 123\n        t_order_item:\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_item_$->{order_id % 2}\n          key-generator:\n            column: order_item_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '5b01ec6ef1e28ddd4de26c4e94824e8b', '2021-04-18 19:23:41', '2021-04-19 03:23:41', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 130, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  shardingsphere:\r\n    props:\r\n      sql.show: true\r\n    datasource:\r\n      names: ds0,ds1\r\n      ds0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n      ds1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n    sharding:\r\n      default-database-strategy:\r\n        inline:\r\n          sharding-column: user_id\r\n          algorithm-expression: ds$->{user_id % 2}\r\n      binding-tables: t_order,t_order_item\r\n      broadcast-tables: t_dict,storage_0\r\n      tables:\r\n        t_order:\r\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_id\r\n            type: SNOWFLAKE\r\n        t_order_item:\r\n          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_item_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_item_id\r\n            type: SNOWFLAKE\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN\r\n# Redisson 配置 -------------------------------------------------------------       \r\nredisson:\r\n  address: \"redis://192.168.40.199:6369\"\r\n  password: \r\n# Seata 配置 -------------------------------------------------------------  \r\nseata:\r\n  enabled: true\r\n  applicationId: raw-biz\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n  enableAutoDataSourceProxy: true\r\n  txServiceGroup: my_biz_test_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n      application: seata-server', '5f7946df641d567ae33104932b4bc255', '2021-04-18 19:24:26', '2021-04-19 03:24:26', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 131, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '62960bb4cbbdce7a7ae5d885e7e5d5ed', '2021-04-18 22:38:35', '2021-04-19 06:38:36', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 132, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '858af6922c96d7d3574062f48fb58c1b', '2021-04-18 22:38:57', '2021-04-19 06:38:57', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 133, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'bd25d5ac7e7a5fd415d329df2468e4c1', '2021-04-18 22:39:13', '2021-04-19 06:39:14', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 134, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  shardingsphere:\r\n    props:\r\n      sql.show: true\r\n    datasource:\r\n      names: ds0,ds1\r\n      ds0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n      ds1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n    sharding:\r\n      default-database-strategy:\r\n        inline:\r\n          sharding-column: user_id\r\n          algorithm-expression: ds$->{user_id % 2}\r\n      # 绑定逻辑表\r\n      binding-tables: t_order\r\n      # 广播表\r\n      broadcast-tables: t_dict,storage_0,account_0\r\n      tables:\r\n        t_order:\r\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_id\r\n            type: SNOWFLAKE\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN\r\n# Redisson 配置 -------------------------------------------------------------       \r\nredisson:\r\n  address: \"redis://192.168.40.199:6369\"\r\n  password: \r\n# Seata 配置 -------------------------------------------------------------  \r\nseata:\r\n  enabled: true\r\n  applicationId: raw-biz\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n  enableAutoDataSourceProxy: true\r\n  txServiceGroup: my_biz_test_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n      application: seata-server', '3bc51fc3827cd2ad3e74ad345c9b9fe0', '2021-04-18 22:39:32', '2021-04-19 06:39:32', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 135, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: false\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'd2a1c80dbea67e96af9c428afe48c7ac', '2021-04-18 22:56:45', '2021-04-19 06:56:46', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 136, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: false\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '4867a44b957b5073a7311257c9212c3c', '2021-04-18 22:57:11', '2021-04-19 06:57:12', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 137, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: false\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '62f54f6763231b6baa6a79e3d7dba2c0', '2021-04-18 22:57:30', '2021-04-19 06:57:30', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 138, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  shardingsphere:\r\n    props:\r\n      sql.show: true\r\n    datasource:\r\n      names: ds0,ds1\r\n      ds0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n      ds1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n    sharding:\r\n      default-database-strategy:\r\n        inline:\r\n          sharding-column: user_id\r\n          algorithm-expression: ds$->{user_id % 2}\r\n      # 绑定逻辑表\r\n      binding-tables: t_order\r\n      # 广播表\r\n      broadcast-tables: t_dict,storage_0,account_0\r\n      tables:\r\n        t_order:\r\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_id\r\n            type: SNOWFLAKE\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN\r\n# Redisson 配置 -------------------------------------------------------------       \r\nredisson:\r\n  address: \"redis://192.168.40.199:6369\"\r\n  password: \r\n# Seata 配置 -------------------------------------------------------------  \r\nseata:\r\n  enabled: true\r\n  applicationId: raw-biz\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n  enableAutoDataSourceProxy: false\r\n  txServiceGroup: my_biz_test_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n      application: seata-server', '7d9ef0b279aba89fed11b29d98e64136', '2021-04-18 22:57:49', '2021-04-19 06:57:49', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 139, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  shardingsphere:\r\n    props:\r\n      sql.show: true\r\n    datasource:\r\n      names: ds0,ds1\r\n      ds0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n      ds1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n    sharding:\r\n      default-database-strategy:\r\n        inline:\r\n          sharding-column: user_id\r\n          algorithm-expression: ds$->{user_id % 2}\r\n      # 绑定逻辑表\r\n      binding-tables: t_order\r\n      # 广播表\r\n      broadcast-tables: t_dict,storage_0,account_0\r\n      tables:\r\n        t_order:\r\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_id\r\n            type: SNOWFLAKE\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN\r\n# Redisson 配置 -------------------------------------------------------------       \r\nredisson:\r\n  address: \"redis://192.168.40.199:6369\"\r\n  password: \r\n# Seata 配置 -------------------------------------------------------------  \r\nseata:\r\n  enabled: true\r\n  applicationId: raw-biz\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n  enableAutoDataSourceProxy: true\r\n  txServiceGroup: my_biz_test_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n      application: seata-server', '13b9281eed4c2c922557b00885e2e447', '2021-04-18 22:58:19', '2021-04-19 06:58:20', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 140, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  shardingsphere:\r\n    props:\r\n      sql.show: true\r\n    datasource:\r\n      names: ds0,ds1\r\n      ds0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n      ds1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n    sharding:\r\n      default-database-strategy:\r\n        inline:\r\n          sharding-column: user_id\r\n          algorithm-expression: ds$->{user_id % 2}\r\n      # 绑定逻辑表\r\n      binding-tables: t_order\r\n      # 广播表\r\n      broadcast-tables: t_dict,storage_0,account_0\r\n      tables:\r\n        t_order:\r\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_id\r\n            type: SNOWFLAKE\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN\r\n# Redisson 配置 -------------------------------------------------------------       \r\nredisson:\r\n  address: \"redis://192.168.40.199:6369\"\r\n  password: \r\n# Seata 配置 -------------------------------------------------------------  \r\nseata:\r\n  enabled: true\r\n  applicationId: raw-biz\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n  enableAutoDataSourceProxy: true\r\n  txServiceGroup: my_biz_test_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n      application: seata-server', '13b9281eed4c2c922557b00885e2e447', '2021-04-18 23:04:12', '2021-04-19 07:04:13', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 141, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'c954ecaf3692b0acce826f55a4ec703a', '2021-04-18 23:04:35', '2021-04-19 07:04:35', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 142, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '4f54efede4caca0dd37ffd45adc2c755', '2021-04-18 23:04:53', '2021-04-19 07:04:54', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 143, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '19c6384d0a4b58f18b8ee7c1258ad2c7', '2021-04-18 23:05:12', '2021-04-19 07:05:12', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 144, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: false\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '7db3cdb7ff40fb3ec6b0a2cd75ebfbcc', '2021-04-19 05:12:30', '2021-04-19 05:12:31', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 145, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: false\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '37320de2ec154dcc12f99cfe70544af4', '2021-04-19 05:12:47', '2021-04-19 05:12:47', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 146, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: false\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '4e211c89a25fb4ed4ad6b118094ec307', '2021-04-19 05:13:04', '2021-04-19 05:13:05', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 147, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\r\n  shardingsphere:\r\n    props:\r\n      sql.show: true\r\n    datasource:\r\n      names: ds0,ds1\r\n      ds0:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n      ds1:\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class-name: com.mysql.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\r\n        username: root\r\n        password: 123456\r\n    sharding:\r\n      default-database-strategy:\r\n        inline:\r\n          sharding-column: user_id\r\n          algorithm-expression: ds$->{user_id % 2}\r\n      # 绑定逻辑表\r\n      binding-tables: t_order\r\n      # 广播表\r\n      broadcast-tables: t_dict,storage_0,account_0\r\n      tables:\r\n        t_order:\r\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\r\n          table-strategy:\r\n            inline:\r\n              sharding-column: order_id\r\n              algorithm-expression: t_order_$->{order_id % 2}\r\n          key-generator:\r\n            column: order_id\r\n            type: SNOWFLAKE\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\nlogging:\r\n  level:\r\n    io:\r\n      seata: INFO\r\n    com.alibaba.nacos.client.config.impl: WARN\r\n# Redisson 配置 -------------------------------------------------------------       \r\nredisson:\r\n  address: \"redis://192.168.40.199:6369\"\r\n  password: \r\n# Seata 配置 -------------------------------------------------------------  \r\nseata:\r\n  enabled: true\r\n  applicationId: raw-biz\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n  enableAutoDataSourceProxy: false\r\n  txServiceGroup: my_biz_test_tx_group\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      server-addr: 192.168.40.199:8848\r\n      group: \"SEATA_GROUP\"\r\n      namespace: \"\"\r\n      username: \"nacos\"\r\n      password: \"nacos\"\r\n      application: seata-server', '38f3d50391db894490dea62ffd37a7e3', '2021-04-19 05:13:26', '2021-04-19 05:13:27', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 148, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'c954ecaf3692b0acce826f55a4ec703a', '2021-04-19 07:47:53', '2021-04-19 07:47:54', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 149, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level: debug\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '7a9ec6f5e69003dac461c1af7f66d3f4', '2021-04-19 07:49:11', '2021-04-19 07:49:11', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 150, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'c954ecaf3692b0acce826f55a4ec703a', '2021-04-19 07:53:16', '2021-04-19 07:53:17', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 151, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '4f54efede4caca0dd37ffd45adc2c755', '2021-04-19 07:55:59', '2021-04-19 07:55:59', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 152, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: DEBUG\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '1cfff473ec0cbe517f461e8b1019725a', '2021-04-19 07:56:15', '2021-04-19 07:56:16', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 153, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'c954ecaf3692b0acce826f55a4ec703a', '2021-04-19 08:24:29', '2021-04-19 08:24:30', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 154, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: DEBUG\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '50e77f0e1765990156945d71b306050c', '2021-04-19 08:24:40', '2021-04-19 08:24:41', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 155, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '19c6384d0a4b58f18b8ee7c1258ad2c7', '2021-04-19 08:24:56', '2021-04-19 08:24:56', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 156, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-biz\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_biz_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'fbfff331f188aef9d6e5625e921d133d', '2021-04-19 08:25:19', '2021-04-19 08:25:20', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 157, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0,undo_log\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: DEBUG\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '7108bf07b2c56130cbf2f5cdda31d851', '2021-04-19 08:38:50', '2021-04-19 08:38:51', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 158, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0,undo_log\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '8d98ea73bb0997dc6869f758432c10c3', '2021-04-19 08:46:24', '2021-04-19 08:46:25', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 159, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0,undo_log\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-biz\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_biz_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'c849f6603828f69681678593652f9d8b', '2021-04-19 12:01:07', '2021-04-19 12:01:08', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 160, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0,undo_log\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: DEBUG\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '598087fa93046ec59bcb4f32aa1845e5', '2021-04-19 12:01:21', '2021-04-19 12:01:21', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 161, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0,undo_log\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '67e0331b7034c607f00aa75e4cffe9ac', '2021-04-19 12:01:34', '2021-04-19 12:01:34', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 162, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0,undo_log\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '2017d93130e28dc1d0382cce9029b3af', '2021-04-19 12:01:56', '2021-04-19 12:01:57', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 163, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: DEBUG\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '1cfff473ec0cbe517f461e8b1019725a', '2021-04-19 23:52:55', '2021-04-19 23:52:56', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 164, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', '# spring:\n#   shardingsphere:\n#     props:\n#       sql.show: true\n#     datasource:\n#       names: ds0,ds1\n#       ds0:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#       ds1:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#     sharding:\n#       default-database-strategy:\n#         inline:\n#           sharding-column: user_id\n#           algorithm-expression: ds$->{user_id % 2}\n#       # 绑定逻辑表\n#       binding-tables: t_order\n#       # 广播表\n#       broadcast-tables: t_dict,storage_0,account_0\n#       tables:\n#         t_order:\n#           actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n#           table-strategy:\n#             inline:\n#               sharding-column: order_id\n#               algorithm-expression: t_order_$->{order_id % 2}\n#           key-generator:\n#             column: order_id\n#             type: SNOWFLAKE\nspring:\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: DEBUG\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'bdb6ca5499c5d5fb55139cd0c6aa011c', '2021-04-19 23:55:50', '2021-04-19 23:55:50', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 165, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', '# spring:\n#   shardingsphere:\n#     props:\n#       sql.show: true\n#     datasource:\n#       names: ds0,ds1\n#       ds0:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#       ds1:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#     sharding:\n#       default-database-strategy:\n#         inline:\n#           sharding-column: user_id\n#           algorithm-expression: ds$->{user_id % 2}\n#       # 绑定逻辑表\n#       binding-tables: t_order\n#       # 广播表\n#       broadcast-tables: t_dict,storage_0,account_0\n#       tables:\n#         t_order:\n#           actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n#           table-strategy:\n#             inline:\n#               sharding-column: order_id\n#               algorithm-expression: t_order_$->{order_id % 2}\n#           key-generator:\n#             column: order_id\n#             type: SNOWFLAKE\nspring:\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n    driver-class-name: com.mysql.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: DEBUG\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '420e15409a27157b74b7d581c750ed78', '2021-04-20 00:08:59', '2021-04-20 00:09:00', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (74, 166, 'cloud-order-service-dev.yaml', 'DEFAULT_GROUP', '', '# spring:\n#   shardingsphere:\n#     props:\n#       sql.show: true\n#     datasource:\n#       names: ds0,ds1\n#       ds0:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#       ds1:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#     sharding:\n#       default-database-strategy:\n#         inline:\n#           sharding-column: user_id\n#           algorithm-expression: ds$->{user_id % 2}\n#       # 绑定逻辑表\n#       binding-tables: t_order\n#       # 广播表\n#       broadcast-tables: t_dict,storage_0,account_0\n#       tables:\n#         t_order:\n#           actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n#           table-strategy:\n#             inline:\n#               sharding-column: order_id\n#               algorithm-expression: t_order_$->{order_id % 2}\n#           key-generator:\n#             column: order_id\n#             type: SNOWFLAKE\nspring:\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n    driver-class-name: com.mysql.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: DEBUG\n    com.alibaba.nacos.client.config.impl: WARN\n\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n\n# MyBatis 配置 -------------------------------------------------------------  \n# mybatis:\n#   mapperLocations: classpath:mapper/*.xml\n#   typeAliasesPackage: com.yan.cloud.dao\n#   configuration:\n#     map-underscore-to-camel-case: true\n# MyBatis-Plus 配置 -------------------------------------------------------------     \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    #设置全局属性用于控制数据库的类型\n    dbType: mysql \n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-order\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_order_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'da09b45d4513e7d5aaf86f510378b16c', '2021-04-20 00:10:11', '2021-04-20 00:10:12', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (75, 167, 'cloud-storage-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata 配置 ----------------------------------------------------\nseata:\n  enabled: true\n  application-id: raw-storage\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_storage_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '4f54efede4caca0dd37ffd45adc2c755', '2021-04-20 00:13:46', '2021-04-20 00:13:46', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 168, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nmybatis:\n  mapperLocations: classpath:mapper/*.xml\n  typeAliasesPackage: com.yan.cloud.dao\n  configuration:\n    map-underscore-to-camel-case: true\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n\nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', '19c6384d0a4b58f18b8ee7c1258ad2c7', '2021-04-20 00:16:10', '2021-04-20 00:16:11', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (78, 169, 'cloud-account-service-dev.yaml', 'DEFAULT_GROUP', '', '# spring:\n#   shardingsphere:\n#     props:\n#       sql.show: true\n#     datasource:\n#       names: ds0,ds1\n#       ds0:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#       ds1:\n#         type: com.zaxxer.hikari.HikariDataSource\n#         driver-class-name: com.mysql.jdbc.Driver\n#         jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n#         username: root\n#         password: 123456\n#     sharding:\n#       default-database-strategy:\n#         inline:\n#           sharding-column: user_id\n#           algorithm-expression: ds$->{user_id % 2}\n#       # 绑定逻辑表\n#       binding-tables: t_order\n#       # 广播表\n#       broadcast-tables: t_dict,storage_0,account_0\n#       tables:\n#         t_order:\n#           actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n#           table-strategy:\n#             inline:\n#               sharding-column: order_id\n#               algorithm-expression: t_order_$->{order_id % 2}\n#           key-generator:\n#             column: order_id\n#             type: SNOWFLAKE\n\nspring:\n  datasource:\n    username: root\n    password: 123456\n    url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n    driver-class-name: com.mysql.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: SELECT 1 FROM DUAL\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n# Mybatis -------------------------------------------------\n# mybatis:\n#   mapperLocations: classpath:mapper/*.xml\n#   typeAliasesPackage: com.yan.cloud.dao\n#   configuration:\n#     map-underscore-to-camel-case: true\n\n# Redison -------------------------------------------------    \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password:\n\n# Mybatis-Plus -------------------------------------------------    \nmybatis-plus:\n  #  datasource: dataSource\n  mapper-locations: classpath:/mapper/*.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  type-aliases-package:  com.yan.cloud.pojo\n  #typeEnumsPackage: com.baomidou.springboot.entity.enums\n  global-config:\n    #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\", 4:\"该类型为未设置主键类型\", 5:\"字符串全局唯一ID\";\n    id-type: 2\n    #字段策略 0:\"忽略判断\",1:\"非 NULL 判断\"),2:\"非空判断\"\n    field-strategy: 1\n    #驼峰下划线转换\n    db-column-underline: true\n    #刷新mapper 调试神器\n    refresh-mapper: true\n    #数据库大写下划线转换\n    #capital-mode: true\n    #逻辑删除配置（下面3个配置）\n    logic-delete-value: 0\n    logic-not-delete-value: 1\n    # SQL 解析缓存，开启后多租户 @SqlParser 注解生效\n    sql-parser-cache: true\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n  configuration-properties:\n    dbType: mysql #设置全局属性用于控制数据库的类型\n# Seata -------------------------------------------------   \nseata:\n  enabled: true\n  application-id: raw-account\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enable-auto-data-source-proxy: true\n  tx-service-group: my_account_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'f0ba2e429f3cc971251b26cb5b2ba220', '2021-04-20 00:16:42', '2021-04-20 00:16:42', NULL, '192.168.40.1', 'U', '');
INSERT INTO `his_config_info` VALUES (100, 170, 'cloud-biz-service-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  shardingsphere:\n    props:\n      sql.show: true\n    datasource:\n      names: ds0,ds1\n      ds0:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds0?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n      ds1:\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class-name: com.mysql.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.40.199:3316/ds1?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8\n        username: root\n        password: 123456\n    sharding:\n      default-database-strategy:\n        inline:\n          sharding-column: user_id\n          algorithm-expression: ds$->{user_id % 2}\n      # 绑定逻辑表\n      binding-tables: t_order\n      # 广播表\n      broadcast-tables: t_dict,storage_0,account_0\n      tables:\n        t_order:\n          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}\n          table-strategy:\n            inline:\n              sharding-column: order_id\n              algorithm-expression: t_order_$->{order_id % 2}\n          key-generator:\n            column: order_id\n            type: SNOWFLAKE\nfeign:\n  hystrix:\n    enabled: false\nlogging:\n  level:\n    io:\n      seata: INFO\n    com.alibaba.nacos.client.config.impl: WARN\n# Redisson 配置 -------------------------------------------------------------       \nredisson:\n  address: \"redis://192.168.40.199:6369\"\n  password: \n# Seata 配置 -------------------------------------------------------------  \nseata:\n  enabled: true\n  applicationId: raw-biz\n  config:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n  enableAutoDataSourceProxy: true\n  txServiceGroup: my_biz_test_tx_group\n  registry:\n    type: nacos\n    nacos:\n      server-addr: 192.168.40.199:8848\n      group: \"SEATA_GROUP\"\n      namespace: \"\"\n      username: \"nacos\"\n      password: \"nacos\"\n      application: seata-server', 'fbfff331f188aef9d6e5625e921d133d', '2021-04-20 00:16:51', '2021-04-20 00:16:51', NULL, '192.168.40.1', 'D', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `resource` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `action` varchar(8) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `password` varchar(500) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
